#! /usr/bin/env python2

import logging, os, signal, time
from threading import Timer
from lib.dvr import DVR

logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)
ch = logging.StreamHandler()
formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
ch.setFormatter(formatter)
logger.addHandler(ch)

period_sec = 60
dvr = DVR()
timer = None

def periodic_check():
    dvr.scan_for_upcoming_recordings()
    global timer
    timer = Timer(period_sec, periodic_check)
    timer.start()

def interrupt_handler(signum, frame):
    logger.info('Interrupted, exiting')
    os._exit(1)

signal.signal(signal.SIGINT, interrupt_handler)

periodic_check()

while True: time.sleep(10) # Leave a main thread around that can be interrupted
