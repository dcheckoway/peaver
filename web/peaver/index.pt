<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Peaver</title>
</head>
<style type="text/css">
.bold { font-weight: bold; }
.italic { font-style: italic; }
.center { text-align: center; }
.bgRed { background-color: red }
.bgYellow { background-color: yellow }
.bgGreen { background-color: green }
.leftSpace { padding-left: 5px; }
h4 {
    font-family: Arial;
}
table#recordings {
    border: 0;
}
td.recording {
    font-family: Arial;
    font-size: 12px;
    border: 0;
}
table#seasonPasses {
    border: 0;
}
td.seasonPass {
    font-family: Arial;
    font-size: 12px;
    border: 0;
}
td.searchResult {
    font-family: Arial;
    font-size: 12px;
    border: 0;
}
.circle {
    width: 14px;
    height: 14px;
    -webkit-border-radius: 20px;
    -moz-border-radius: 20px;
    border-radius: 20px;
    border: 1px solid #888;
}
.newMark {
    width: 28px;
    height: 14px;
    border-radius: 20px;
    font-family: Arial;
    font-size: 9px;
    font-weight: bold;
    color: #000;
    line-height: 14px;
    text-align: center;
    background: #0F0;
    border: 1px solid #888;
}
</style>
<script src="https://code.jquery.com/jquery-3.0.0.min.js"
        integrity="sha256-JmvOoLtYsmqlsWxa7mDSLMwa6dZ9rrIdtrrVYRnDRH0="
		crossorigin="anonymous"></script>
<script src="http://stevenlevithan.com/assets/misc/date.format.js"></script>
<body>

<h4>Recordings</h4>
<table id="recordings"><tbody/></table>

<h4>Season Passes</h4>
<table id="seasonPasses"><tbody/></table>

<h4>Add a Season Pass</h4>
<input id="searchText" type="text" placeholder=""/>
<input id="searchButton" type="button" value="Search"/>
<table id="searchResults"><tbody/></table>

</body>
<script>
function recordingClass(recordingStatus) {
    switch (recordingStatus) {
    case 'ready':
        return 'circle bgGreen'
    case 'recording':
        return 'circle bgRed'
    default:
        return ''
    }
}

function seasonEp(recording) {
    if (recording.program.season && recording.program.episode) {
        return 'S' + twoDigit(recording.program.season) + 'E' + twoDigit(recording.program.episode)
    } else {
        return null
    }
}

function twoDigit(v) {
    return v < 10 ? ('0' + v) : v
}

function shortDesc(recording) {
    se = seasonEp(recording)
    if (se) {
        return se
    } else if (recording.program.episode_title) {
        return recording.program.episode_title
    } else {
        return 'N/A'
    }
}

function addSeasonPass(title) {
    $.getJSON("add_season_pass", { 'title': title })
        .done(function(seasonPass) {
            alert('Added season pass for ' + seasonPass.program_title + '.')
            loadSeasonPasses()
        })
        .fail(function(jqxhr, status, error) {
            alert('Failed to add season pass, status=' + status + ', error=' + error)
        })
}

function loadRecordings() {
    $.getJSON("recordings", function(data, status) {
        $("#recordings tbody").html("")
        $.each(data, function(idx, recording) {
            $("#recordings tbody").append(
                '<tr>' +
                    '<td class="recording"><div class="' + recordingClass(recording.status) + '"/></td>' +
                    '<td class="recording center">' + dateFormat(recording.air_date_time, "m/d") + '</td>' +
                    '<td class="recording center">' + dateFormat(recording.air_date_time, "h:MMt") + '</td>' +
                    '<td class="recording bold">' + recording.program.title + '</td>' +
                    '<td class="recording"><div class="' + (recording.new ? "newMark" : "repeatMark") + '"/></td>' +
                    '<td class="recording">' + shortDesc(recording) + '</td>' +
                    '</tr>')
            $(".newMark").html('<span>NEW</span>')
        })
    })
}

function loadSeasonPasses() {
    $.getJSON("season_passes", function(data, status) {
        $("#seasonPasses tbody").html("")
        $.each(data, function(idx, seasonPass) {
            $("#seasonPasses tbody").append(
                '<tr>' +
                    '<td class="seasonPass bold">' + seasonPass.program_title + '</td>' +
                    '<td class="seasonPass leftSpace">' + (seasonPass.new_only ? 'New Only' : 'New &amp; Repeat') + '</td>' +
                    '</tr>')
        })
    })
}

$(document).ready(function() {
    loadRecordings()
    loadSeasonPasses()
})

$("#searchButton").click(function() {
    var term = $("#searchText").val().trim()
    if (term.length < 2) {
        alert('Minimum search length is 2')
    } else {
        $("#searchResults tbody").html('<tr><td class="searchResult italic">searching...</td></tr>')
        $.getJSON("search", { 'term': term }, function(data, status) {
            if (data.length == 0) {
                $("#searchResults tbody").html('<tr><td class="searchResult italic">no programs found</td></tr>')
            } else {
                $("#searchResults tbody").html("")
                $.each(data, function(idx, result) {
                    $("#searchResults tbody").append(
                        '<tr>' +
                            '<td class="searchResult bold">' + result.title + '</td>' +
                            '<td class="searchResult leftSpace"><input class="addSeasonPassButton" type="button" onclick="addSeasonPass(\'' + result.title + '\')" value="Add"/></td>' +
                            '</tr>')
                })
            }
        })
    }
})

$("#searchText").keyup(function(event) {
    if (event.keyCode == 13) $("#searchButton").click()
});

</script>
</html>
